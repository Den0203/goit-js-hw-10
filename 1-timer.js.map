{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nflatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      startBtn.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      userSelectedDate = null;\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDate;\n    }\n  },\n});\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  input.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const delta = userSelectedDate - now;\n\n    if (delta <= 0) {\n      clearInterval(timerId);\n      updateTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      input.disabled = false;\n      startBtn.disabled = true;\n      return;\n    }\n\n    const time = convertMs(delta);\n    updateTimer(time);\n  }, 1000);\n});\n"],"names":["startBtn","input","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimer","flatpickr","selectedDates","selectedDate","iziToast","delta","time"],"mappings":"+IAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAU,KAEd,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAY,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDb,EAAO,YAAcM,EAAeI,CAAI,EACxCT,EAAQ,YAAcK,EAAeK,CAAK,EAC1CT,EAAU,YAAcI,EAAeM,CAAO,EAC9CT,EAAU,YAAcG,EAAeO,CAAO,CAChD,CAEAE,EAAUhB,EAAO,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQiB,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBnB,EAAS,SAAW,GACpBoB,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDd,EAAmB,OAEnBN,EAAS,SAAW,GACpBM,EAAmBa,EAEtB,CACH,CAAC,EAEDnB,EAAS,iBAAiB,QAAS,IAAM,CAClCM,IAELN,EAAS,SAAW,GACpBC,EAAM,SAAW,GAEjBM,EAAU,YAAY,IAAM,CAE1B,MAAMc,EAAQf,EADF,IAAI,KAGhB,GAAIe,GAAS,EAAG,CACd,cAAcd,CAAO,EACrBS,EAAY,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACzDf,EAAM,SAAW,GACjBD,EAAS,SAAW,GACpB,MACD,CAED,MAAMsB,EAAOZ,EAAUW,CAAK,EAC5BL,EAAYM,CAAI,CACjB,EAAE,GAAI,EACT,CAAC"}